<!DOCTYPE html>
<html lang="th">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>‡πÅ‡∏≠‡∏õ TODO</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f6f6f6;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
        }
        .container {
            background-color: white;
            width: 400px;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            text-align: center;
        }
        h1 {
            color: #4A6EFF;
            font-size: 24px;
            margin-bottom: 20px;
        }
        .tabs {
            display: flex;
            justify-content: center;
            border-bottom: 1px solid #ddd;
            margin-bottom: 20px;
        }
        .tabs div {
            padding: 10px 20px;
            cursor: pointer;
            color: #4A6EFF;
        }
        .tabs .active {
            border-bottom: 2px solid #4A6EFF;
            font-weight: bold;
        }
        .form-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }
        input[type="text"], select {
            width: 70%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }
        button {
            padding: 10px;
            background-color: #4A6EFF;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }
        .todo-list, .category-list {
            list-style: none;
            padding: 0;
        }
        .todo-item, .category-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px 0;
            border-bottom: 1px solid #ddd;
        }
        .todo-item:last-child, .category-item:last-child {
            border-bottom: none;
        }
        .action-btn {
            padding: 5px 10px;
            background-color: red;
            color: white;
            border: none;
            cursor: pointer;
            border-radius: 5px;
        }
        .edit-btn {
            background-color: #FFD700;
        }
        .complete-btn {
            background-color: green;
        }
    </style>
</head>
<body>

<div class="container">
    <h1>Todo App with Categories</h1>

    <!-- ‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏ó‡πá‡∏ö‡∏™‡∏•‡∏±‡∏ö‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà -->
    <div class="tabs">
        <div id="tab-todos" class="active">Todos</div>
        <div id="tab-categories">Categories</div>
    </div>

    <!-- ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà -->
    <div class="form-container" id="todo-form">
        <input type="text" id="todo-input" placeholder="‡∏ä‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏á‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà">
        <select id="category-select">
            <!-- ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å -->
        </select>
        <button id="create-todo">Create Todo</button>
    </div>

    <!-- ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏á‡∏≤‡∏ô -->
    <ul class="todo-list" id="todo-list">
        <!-- ‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏à‡∏∞‡∏õ‡∏£‡∏≤‡∏Å‡∏è‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà -->
    </ul>

    <!-- ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÉ‡∏´‡∏°‡πà -->
    <div class="form-container" id="category-form" style="display: none;">
        <input type="text" id="category-input" placeholder="‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÉ‡∏´‡∏°‡πà...">
        <button id="create-category">Create Category</button>
    </div>

    <!-- ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà -->
    <ul class="category-list" id="category-list" style="display: none;">
        <!-- ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏à‡∏∞‡∏õ‡∏£‡∏≤‡∏Å‡∏è‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà -->
    </ul>

</div>

<script>
    const createTodoBtn = document.getElementById('create-todo');
    const createCategoryBtn = document.getElementById('create-category');
    const todoInput = document.getElementById('todo-input');
    const categoryInput = document.getElementById('category-input');
    const todoList = document.getElementById('todo-list');
    const categoryList = document.getElementById('category-list');
    const categorySelect = document.getElementById('category-select');
    const tabTodos = document.getElementById('tab-todos');
    const tabCategories = document.getElementById('tab-categories');
    const todoForm = document.getElementById('todo-form');
    const categoryForm = document.getElementById('category-form');

    let todos = [];
    let categories = [];

    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÅ‡∏ó‡πá‡∏ö
    tabTodos.addEventListener('click', () => {
        tabTodos.classList.add('active');
        tabCategories.classList.remove('active');
        todoForm.style.display = 'flex';
        categoryForm.style.display = 'none';
        todoList.style.display = 'block';
        categoryList.style.display = 'none';
    });

    tabCategories.addEventListener('click', () => {
        tabCategories.classList.add('active');
        tabTodos.classList.remove('active');
        todoForm.style.display = 'none';
        categoryForm.style.display = 'flex';
        todoList.style.display = 'none';
        categoryList.style.display = 'block';
    });

    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà
    createTodoBtn.addEventListener('click', () => {
        const todoText = todoInput.value.trim();
        const selectedCategory = categorySelect.value;
        if (todoText !== '' && selectedCategory) {
            addTodo(todoText, selectedCategory);
            todoInput.value = '';  // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏ä‡πà‡∏≠‡∏á input
        }
    });

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
    function addTodo(todoText, category) {
        const li = document.createElement('li');
        li.classList.add('todo-item');
        li.innerHTML = `
            <span>${todoText} (${category})</span>
            <button class="complete-btn">‚úîÔ∏è</button>
            <button class="edit-btn">‚úèÔ∏è</button>
            <button class="action-btn">üóëÔ∏è</button>
        `;

        // ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô "‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à"
        li.querySelector('.complete-btn').addEventListener('click', () => {
            li.style.textDecoration = 'line-through';
        });

        // ‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö‡∏á‡∏≤‡∏ô
        li.querySelector('.action-btn').addEventListener('click', () => {
            li.remove();
        });

        todoList.appendChild(li);
    }

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÉ‡∏´‡∏°‡πà
    createCategoryBtn.addEventListener('click', () => {
        const categoryText = categoryInput.value.trim();
        if (categoryText !== '') {
            addCategory(categoryText);
            categoryInput.value = '';  // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏ä‡πà‡∏≠‡∏á input
        }
    });

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÉ‡∏´‡∏°‡πà
    function addCategory(categoryText) {
        categories.push(categoryText);
        renderCategories();
    }

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÉ‡∏ô select ‡πÅ‡∏•‡∏∞ list
    function renderCategories() {
        categorySelect.innerHTML = '';
        categoryList.innerHTML = '';

        categories.forEach(category => {
            const option = document.createElement('option');
            option.value = category;
            option.textContent = category;
            categorySelect.appendChild(option);

            const li = document.createElement('li');
            li.classList.add('category-item');
            li.innerHTML = `
                <span>${category}</span>
                <button class="action-btn">üóëÔ∏è</button>
            `;

            // ‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
            li.querySelector('.action-btn').addEventListener('click', () => {
                categories = categories.filter(cat => cat !== category);
                renderCategories();
            });

            categoryList.appendChild(li);
        });
    }
</script>

</body>
</html>
