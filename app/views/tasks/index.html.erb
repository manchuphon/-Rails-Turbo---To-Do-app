<!DOCTYPE html>
<html lang="th">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>TODO App พร้อมหมวดหมู่</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f6f6f6;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
        }
        .container {
            background-color: white;
            width: 500px;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            text-align: center;
        }
        h1 {
            color: #4A6EFF;
            font-size: 36px;
            margin-bottom: 20px;
        }
        .form-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }
        input[type="text"] {
            width: 70%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }
        .create-btn, .add-category-btn {
            padding: 10px 15px;
            border: none;
            background-color: #4A6EFF;
            color: white;
            border-radius: 5px;
            cursor: pointer;
        }
        .todo-list {
            list-style: none;
            padding: 0;
        }
        .todo-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px 0;
            border-bottom: 1px solid #ddd;
        }
        .todo-item:last-child {
            border-bottom: none;
        }
        .todo-text {
            font-size: 18px;
        }
        .todo-actions, .category-actions {
            display: flex;
            gap: 10px;
        }
        .action-btn {
            width: 30px;
            height: 30px;
            border: 1px dashed #ddd;
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center;
            cursor: pointer;
        }
        .category-list {
            margin-bottom: 20px;
            text-align: left;
        }
        .category-item {
            margin-bottom: 10px;
        }
    </style>
</head>
<body>

<div class="container">
    <h1>Categorized To-Dos</h1>

    <!-- แสดงหมวดหมู่ทั้งหมด -->
    <h3>Categories</h3>
    <div class="form-container">
        <input type="text" placeholder="เพิ่มหมวดหมู่ใหม่ / Add New Category" id="category-input">
        <button class="add-category-btn" id="create-category">เพิ่มหมวดหมู่ / Add Category</button>
    </div>

    <ul class="category-list" id="category-list">
        <!-- รายการหมวดหมู่จะแสดงที่นี่ -->
    </ul>

    <!-- แสดงงานในหมวดหมู่ที่เลือก -->
    <h3>Tasks in Category: <span id="current-category">ทั้งหมด / All</span></h3>
    <div class="form-container">
        <input type="text" placeholder="เพิ่มงานใหม่ / Add New Task" id="todo-input">
        <button class="create-btn" id="create-todo">เพิ่มงาน / Add Task</button>
    </div>

    <ul class="todo-list" id="todo-list">
        <!-- รายการงานจะปรากฏที่นี่ -->
    </ul>
</div>

<script>
    let categories = [];
    let todos = [];
    let currentCategory = 'ทั้งหมด / All';

    const categoryInput = document.getElementById('category-input');
    const todoInput = document.getElementById('todo-input');
    const categoryList = document.getElementById('category-list');
    const todoList = document.getElementById('todo-list');
    const currentCategoryDisplay = document.getElementById('current-category');
    
    document.getElementById('create-category').addEventListener('click', () => {
        const categoryName = categoryInput.value.trim();
        if (categoryName) {
            categories.push(categoryName);
            renderCategories();
            categoryInput.value = '';
        }
    });

    document.getElementById('create-todo').addEventListener('click', () => {
        const taskName = todoInput.value.trim();
        if (taskName) {
            todos.push({ name: taskName, category: currentCategory, status: 'incomplete' });
            renderTodos();
            todoInput.value = '';
        }
    });

    function renderCategories() {
        categoryList.innerHTML = '';
        categories.forEach((category, index) => {
            const li = document.createElement('li');
            li.classList.add('category-item');
            li.innerHTML = `
                ${category} 
                <span class="category-actions">
                    <button onclick="selectCategory('${category}')">เลือก / Select</button>
                    <button onclick="deleteCategory(${index})">ลบ / Delete</button>
                </span>
            `;
            categoryList.appendChild(li);
        });
    }

    function renderTodos() {
        todoList.innerHTML = '';
        const filteredTodos = todos.filter(todo => todo.category === currentCategory || currentCategory === 'ทั้งหมด / All');
        filteredTodos.forEach((todo, index) => {
            const li = document.createElement('li');
            li.classList.add('todo-item');
            li.innerHTML = `
                ${todo.name} - ${todo.status === 'complete' ? 'สำเร็จแล้ว / Completed' : 'ยังไม่สำเร็จ / Incomplete'}
                <span class="todo-actions">
                    <button onclick="toggleStatus(${index})">เปลี่ยนสถานะ / Toggle Status</button>
                    <button onclick="deleteTodo(${index})">ลบ / Delete</button>
                </span>
            `;
            todoList.appendChild(li);
        });
    }

    function selectCategory(category) {
        currentCategory = category;
        currentCategoryDisplay.textContent = category;
        renderTodos();
    }

    function deleteCategory(index) {
        categories.splice(index, 1);
        renderCategories();
        currentCategory = 'ทั้งหมด / All';
        currentCategoryDisplay.textContent = 'ทั้งหมด / All';
        renderTodos();
    }

    function toggleStatus(index) {
        todos[index].status = todos[index].status === 'complete' ? 'incomplete' : 'complete';
        renderTodos();
    }

    function deleteTodo(index) {
        todos.splice(index, 1);
        renderTodos();
    }
</script>

</body>
</html>
